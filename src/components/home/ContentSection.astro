---
import { getCollection } from "astro:content";
import FormattedDate from "../FormattedDate.astro";

const posts = (await getCollection("blog"))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 4);

const getDescription = (content: string, length = 100) => {
  // Elimina etiquetas HTML (si las hay) y corta el contenido
  return (
    content
      .replace(/<[^>]*>/g, "") // Eliminar etiquetas HTML
      .slice(0, length) + "..."
  );
};
---

<section>
  <div class="container max-w-6xl p-6 mx-auto space-y-6 sm:space-y-12">
    <div class="flex items-center justify-center">
      <div class="flex-grow h-px bg-blue-700"></div>
      <h1 class="text-2xl font-semibold mx-4">Últimos Artículos</h1>
      <div class="flex-grow h-px bg-blue-700"></div>
    </div>
    {
      posts.length > 0 && (
        <a
          transition:name={posts[0].data.title.replace(/\s+/g, '-').toLowerCase()}
          rel="noopener noreferrer"
          href={`/blog/article/${posts[0].slug}`}
          class="block max-w-sm gap-3 mx-auto sm:max-w-full group bg-white shadow-md rounded-xl hover:scale-105 hover:shadow-xl lg:grid lg:grid-cols-12"
        >
          <img
            alt=""
            class="object-cover w-full h-64 rounded sm:h-96 lg:col-span-7"
            src={posts[0].data.image}
          />
          <div class="p-6 space-y-2 lg:col-span-5">
            <h3 class="text-2xl font-semibold sm:text-4xl group-hover:underline group-focus:underline">
              {posts[0].data.title}
            </h3>
            <FormattedDate date={posts[0].data.pubDate} />
            <p>
              {getDescription(posts[0].body)}
            </p>
            <div class="flex gap-2">
              {posts[0].data.tags.map((tag) => (
                <span class="inline-block py-1 px-2 rounded bg-blue-50 text-blue-700 font-medium tracking-widest">
                  {tag}
                </span>
              ))}
            </div>
          </div>
        </a>
      )
    }

    {
      posts.length > 1 && (
        <div class="grid justify-center grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
          {posts.slice(1).map((post) => (
            <a
              transition:name={post.data.title.replace(/\s+/g, '-').toLowerCase()}
              rel="noopener noreferrer"
              href={`/blog/article/${post.slug}`}
              class="max-w-sm mx-auto group bg-white shadow-md rounded-xl hover:scale-105 hover:shadow-xl"
            >
              <img
                role="presentation"
                class="object-cover w-full rounded h-44"
                src={post.data.image}
              />
              <div class="p-6 space-y-2">
                <h3 class="text-2xl font-semibold group-hover:underline group-focus:underline">
                  {post.data.title}
                </h3>
                <FormattedDate date={post.data.pubDate} />
                <p>
                  {getDescription(post.body)}
                </p>
                <div class="flex gap-2">
                  {post.data.tags.map((tag) => (
                    <span class="inline-block py-1 px-2 rounded bg-blue-50 text-blue-700 font-medium tracking-widest">
                      {tag}
                    </span>
                  ))}
                </div>
              </div>
            </a>
          ))}
        </div>
      )
    }
    <div class="flex justify-center">
      <a
        href="/blog"
        class="inline-block w-auto text-center min-w-[200px] px-6 py-4 bg-blue-700 text-white transition-all rounded-md shadow-xl sm:w-auto hover:shadow-2xl hover:shadow-blue-400 hover:-tranneutral-y-px"
      >
        Ver Más Artículos...
      </a>
    </div>
  </div>
</section>
