---
import FormattedDate from "@/components/FormattedDate.astro";
import { type CollectionEntry } from "astro:content";

const getDescription = (content: string, length = 100) => {
  // Elimina etiquetas HTML (si las hay) y corta el contenido
  return (
    content
      .replace(/<[^>]*>/g, "") // Eliminar etiquetas HTML
      .slice(0, length) + "..."
  );
};

type Props = CollectionEntry<"blog">["data"] & { slug: string } & { body: string };

const { image, title, pubDate, tags, slug, body } = Astro.props;
---

<div transition:name={title}>
  <article class="bg-white shadow-md rounded-xl hover:scale-105 hover:shadow-xl">
    <a
      rel="noopener noreferrer"
      href={`/blog/article/${slug}`}
      class="max-w-sm mx-auto group"
    >
      <img
        role="presentation"
        class="object-cover w-full rounded h-44"
        src={image}
      />
      <div class="p-6 space-y-2">
        <h3
          class="text-2xl font-semibold group-hover:underline group-focus:underline"
        >
          {title}
        </h3>
        <FormattedDate date={pubDate} />
        <p>
          {getDescription(body)}
        </p>
        <div class="flex gap-2">
          {
            tags.map((tag) => (
              <span class="inline-block py-1 px-2 rounded bg-blue-50 text-blue-700 font-medium tracking-widest">
                {tag}
              </span>
            ))
          }
        </div>
      </div>
    </a>
  </article>
</div>
